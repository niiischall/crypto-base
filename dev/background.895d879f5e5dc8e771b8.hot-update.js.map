{"version":3,"file":"background.895d879f5e5dc8e771b8.hot-update.js","sources":["/Users/geekyants/Desktop/Hackathon-21/crypto-base/src/background/index.ts"],"sourcesContent":["import db from '../services/firebase';\nimport { onSnapshot, collection } from '@firebase/firestore';\n\nimport { apiEndPoints, fetchApi } from '../services/api';\nimport {\n  normalizePrice,\n  normalizeNotificationMessage,\n} from '../services/helpers';\n\nlet notificationMessage: string = '';\n\nconst getMarketTicker = async (notificationCoins: string[]) => {\n  const requestURL = `${apiEndPoints.coinsQuotes}${notificationCoins.join(\n    ',',\n  )}`;\n\n  const response = await fetchApi(requestURL);\n  const json = await response.json();\n  const latestQuotes = Object.values(json.data).map((coin: any) => {\n    return {\n      name: coin.name,\n      price: `$${normalizePrice(coin.quote.USD.price)}`,\n    };\n  });\n\n  return latestQuotes;\n};\n\nconst getNotificationMessage = async () => {\n  const signedInUser: string | null = localStorage.getItem('userId');\n\n  onSnapshot(collection(db, 'users'), async (snapshot: any) => {\n    const db = snapshot.docs.map((doc: any) => doc.data());\n    const data = db.find((data: any) => data.userId === signedInUser);\n    if (data) {\n      const notificationCoins = data.notification.map((coin: any) => coin.slug);\n      if (notificationCoins.length > 0) {\n        const latestQuotes = await getMarketTicker(notificationCoins);\n        notificationMessage = normalizeNotificationMessage(latestQuotes);\n      } else {\n        notificationMessage = '';\n      }\n    }\n  });\n};\n\nconst notificationInBackground = async () => {\n  await getNotificationMessage();\n  //Setting up alarm for notification.\n  chrome.alarms.create('NOTIFICATION_ALARM', {\n    periodInMinutes: 0.1,\n  });\n\n  //Firing notification upon that alarm.\n  chrome.alarms.onAlarm.addListener(async (alarm) => {\n    if (alarm.name === 'NOTIFICATION_ALARM') {\n      await getNotificationMessage();\n      const notificationID = `NOTIFICATION_ID_${new Date().getTime()}`;\n      if (notificationMessage) {\n        chrome.notifications.create(notificationID, {\n          type: 'basic',\n          iconUrl: 'img/icon-128.png',\n          title: 'CryptoBase Notification',\n          message: notificationMessage,\n          priority: 2,\n        });\n      }\n    }\n  });\n};\n\nexport default notificationInBackground();\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAKA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAIA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}