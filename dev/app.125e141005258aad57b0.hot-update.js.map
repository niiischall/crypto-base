{"version":3,"file":"app.125e141005258aad57b0.hot-update.js","sources":["/Users/geekyants/Desktop/Hackathon-21/crypto-base/src/store/actions/actionHome.ts"],"sourcesContent":["import { Dispatch } from 'redux';\n\nimport * as types from './actionTypes';\nimport { apiEndPoints, fetchApi } from '../../services/api';\n\nconst getPopularCoinsSuccess = (coins: any[]) => {\n  return {\n    type: types.FETCH_POPULAR_COINS_SUCCESS,\n    coins,\n  };\n};\n\nconst getPopularCoinsFailure = (error: string) => {\n  return {\n    type: types.FETCH_POPULAR_COINS_FAILURE,\n    error,\n  };\n};\n\nexport const getPopularCoins = () => {\n  console.log('getPopularCoins!');\n  return async (dispatch: Dispatch<any>) => {\n    try {\n      const response = await fetchApi(apiEndPoints.popularCoins);\n      if (response.ok) {\n        const json = await response.json();\n        dispatch(getPopularCoinsSuccess(json.data));\n      } else {\n        dispatch(\n          getPopularCoinsFailure('Unable to fetch popular cryptocurrency.'),\n        );\n      }\n    } catch (error) {\n      dispatch(\n        getPopularCoinsFailure('Unable to fetch popular cryptocurrency.'),\n      );\n    }\n  };\n};\n\nconst getPopularCoinsDetailsSuccess = (coinsInfo: any) => {\n  return {\n    type: types.FETCH_POPULAR_COINS_DETAILS_SUCCESS,\n    coinsInfo,\n  };\n};\n\nconst getPopularCoinsDetailsFailure = (error: string) => {\n  return {\n    type: types.FETCH_POPULAR_COINS_DETAILS_FAILURE,\n    error,\n  };\n};\n\nexport const getPopularCoinsDetails = (coins: any[]) => {\n  return async (dispatch: Dispatch<any>) => {\n    const data = coins.map((coin: any) => coin.slug);\n    const requestURL = `${apiEndPoints.coinsInfo}${data.join(',')}`;\n    try {\n      const response = await fetchApi(requestURL);\n      if (response.ok) {\n        const json = await response.json();\n        dispatch(getPopularCoinsDetailsSuccess(json.data));\n      } else {\n        dispatch(\n          getPopularCoinsDetailsFailure(\n            'Unable to fetch popular coins details.',\n          ),\n        );\n      }\n    } catch (error) {\n      dispatch(\n        getPopularCoinsDetailsFailure('Unable to fetch popular coins details.'),\n      );\n    }\n  };\n};\n\nexport const followCoin = (coin: any) => {\n  return {\n    type: types.FOLLOW_COIN,\n    coin,\n  };\n};\n\nexport const unfollowCoin = (coin: any) => {\n  return {\n    type: types.UNFOLLOW_COIN,\n    coin,\n  };\n};\n\nconst getFollowingCoinsDetailsSuccess = (coinsInfo: any) => {\n  return {\n    type: types.FETCH_FOLLOWING_COINS_DETAILS_SUCCESS,\n    coinsInfo,\n  };\n};\n\nconst getFollowingCoinsDetailsFailure = (error: string) => {\n  return {\n    type: types.FETCH_FOLLOWING_COINS_DETAILS_FAILURE,\n    error,\n  };\n};\n\nexport const getFollowingCoinsDetails = (coins: any[]) => {\n  console.log('getFollowingCoins!');\n  return async (dispatch: Dispatch<any>) => {\n    const data = coins.map((coin: any) => coin.slug);\n    const requestURL = `${apiEndPoints.coinsInfo}${data.join(',')}`;\n    try {\n      const response = await fetchApi(requestURL);\n      if (response.ok) {\n        const json = await response.json();\n        dispatch(getFollowingCoinsDetailsSuccess(json.data));\n      } else {\n        dispatch(\n          getFollowingCoinsDetailsFailure(\n            'Unable to fetch following coins details.',\n          ),\n        );\n      }\n    } catch (error) {\n      dispatch(\n        getFollowingCoinsDetailsFailure(\n          'Unable to fetch following coins details.',\n        ),\n      );\n    }\n  };\n};\n\nexport const startNotifications = (coin: string) => {\n  return {\n    type: types.START_COIN_NOTIFICATION,\n    coin,\n  };\n};\n\nexport const stopNotifications = (coin: string) => {\n  return {\n    type: types.STOP_COIN_NOTIFICATION,\n    coin,\n  };\n};\n"],"mappings":";;;;;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AAFA;AAIA;;;;A","sourceRoot":""}