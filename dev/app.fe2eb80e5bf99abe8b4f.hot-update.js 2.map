{"version":3,"file":"app.fe2eb80e5bf99abe8b4f.hot-update.js","sources":["/Users/geekyants/Desktop/Hackathon-21/crypto-base/src/components/Trending/index.tsx"],"sourcesContent":["import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Button } from '@material-ui/core';\nimport { Favorite, Check, Whatshot } from '@material-ui/icons';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\n\nimport { followCoin, unfollowCoin } from '../../store/actions/actionHome';\nimport { normalizePrice, isCoinPresent } from '../../services/helpers';\n\nexport interface Props {}\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    marginTop: 'auto',\n  },\n  searchHeader: {\n    height: '10%',\n    display: 'flex',\n    alignItems: 'center',\n    width: '100%',\n  },\n  searchHeading: {\n    color: '#979797',\n    display: 'flex',\n    fontSize: 15,\n    fontWeight: 700,\n  },\n  icon: {\n    marginLeft: 5,\n    fontSize: 15,\n  },\n  trendingCoin: {\n    backgroundColor: '#f8f8f8',\n    width: '47.5%',\n    height: 200,\n    marginBottom: 15,\n    padding: 10,\n    boxShadow: '0px 2px 9px 0px rgb(0 0 0 / 2%)',\n    borderRadius: '3px',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    transition: 'all .2s linear',\n    '&:hover': {\n      backgroundColor: '#fff',\n      boxShadow: '0 0 0 1px rgb(0 0 0 / 5%), 0 5px 15px rgb(0 0 0 / 15%)',\n    },\n  },\n  coin: {\n    width: 50,\n    height: 50,\n    border: '2px solid #979797',\n    borderRadius: '50%',\n  },\n  textBox: {\n    margin: '5px 0px',\n    textAlign: 'center',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  symbol: {\n    fontSize: 8,\n    fontWeight: 700,\n    color: '#669900',\n  },\n  priceChange: {\n    fontSize: 10,\n    marginLeft: 3,\n  },\n  change: {\n    marginRight: 2,\n    fontWeight: 500,\n  },\n  price: {\n    color: '#979797',\n    display: 'block',\n    marginTop: 5,\n    fontSize: 10,\n    fontWeight: 500,\n  },\n  name: {\n    fontSize: 14,\n    fontWeight: 600,\n    marginBottom: 5,\n  },\n}));\n\nconst StyledFollowButton = withStyles((theme) => ({\n  root: {\n    color: '#fff',\n    backgroundColor: '#000',\n    width: 100,\n    borderRadius: 15,\n    transition: 'all .2s',\n    '&:hover': {\n      color: '#fff',\n      backgroundColor: '#000',\n    },\n  },\n  label: {\n    fontSize: 12,\n    textTransform: 'capitalize',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  endIcon: {\n    marginLeft: 2,\n  },\n}))(Button);\n\nconst StyledUnfollowButton = withStyles((theme) => ({\n  root: {\n    color: '#fff',\n    backgroundColor: '#669900',\n    width: 100,\n    borderRadius: 15,\n    transition: 'all .2s',\n    '&:hover': {\n      color: '#fff',\n      backgroundColor: '#669900',\n    },\n  },\n  label: {\n    fontSize: 12,\n    textTransform: 'capitalize',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  endIcon: {\n    marginLeft: 2,\n  },\n}))(Button);\n\nexport const Trending: React.FC<Props> = (props) => {\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n  const trendingCoins = useSelector((state: any) => state.search.trendingCoins);\n  const trendingCoinsDetails = useSelector(\n    (state: any) => state.search.trendingCoinsDetails,\n  );\n  const followingCoins = useSelector((state: any) => state.home.followingCoins);\n\n  const renderPriceChange = (change: any) => {\n    const isPositive = change > 0;\n    const absoluteChange = Math.abs(change);\n    return (\n      <span\n        className={classes.priceChange}\n        style={{ color: isPositive ? '#006600' : '#cc3300' }}\n      >\n        {isPositive ? (\n          <span className={classes.change}>&uarr;{absoluteChange}%</span>\n        ) : (\n          <span className={classes.change}>&darr;{absoluteChange}%</span>\n        )}\n      </span>\n    );\n  };\n\n  const coinHandler = (coin: any) => {\n    const isCoinFollowed = isCoinPresent(coin, followingCoins);\n    if (isCoinFollowed) dispatch(unfollowCoin(coin));\n    else dispatch(followCoin(coin));\n  };\n\n  return (\n    <React.Fragment>\n      {trendingCoins.length > 0 &&\n        trendingCoinsDetails &&\n        Object.keys(trendingCoins).length > 0 && (\n          <>\n            <div className={classes.searchHeader}>\n              <span className={classes.searchHeading}>\n                Spotlight <Whatshot className={classes.icon} />\n              </span>\n            </div>\n            {trendingCoins.map((coin: any) => {\n              const logo = trendingCoinsDetails[coin.id].logo;\n              return (\n                <div key={coin.id} className={classes.trendingCoin}>\n                  <img\n                    className={classes.coin}\n                    src={logo}\n                    alt={`${coin.slug}-logo`}\n                  />\n                  <div className={classes.textBox}>\n                    <span className={classes.name}>{coin.name}</span>\n                    <span className={classes.symbol}>{coin.symbol}</span>\n                    <span className={classes.price}>\n                      ${normalizePrice(coin.quote.USD.price)} |\n                      {renderPriceChange(\n                        coin.quote.USD.percent_change_24h.toFixed(2),\n                      )}\n                    </span>\n                  </div>\n                  {isCoinPresent(coin, followingCoins) ? (\n                    <StyledUnfollowButton\n                      disableRipple\n                      className={classes.button}\n                      onClick={() => coinHandler(coin)}\n                      endIcon={<Check />}\n                    >\n                      Following\n                    </StyledUnfollowButton>\n                  ) : (\n                    <StyledFollowButton\n                      disableRipple\n                      className={classes.button}\n                      onClick={() => coinHandler(coin)}\n                      endIcon={<Favorite />}\n                    >\n                      Follow\n                    </StyledFollowButton>\n                  )}\n                </div>\n              );\n            })}\n          </>\n        )}\n    </React.Fragment>\n  );\n};\n\nexport default Trending;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AAIA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAbA;AAkBA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AAHA;AAtEA;AA6EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AANA;AAWA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AADA;AAnBA;AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AANA;AAWA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AADA;AAnBA;AAwqCA;AA9CA;AAJA;AAAA;AAAA;AAAA;AAAA;AAuDA;AAEA;;;;A","sourceRoot":""}