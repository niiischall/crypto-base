{"version":3,"file":"background.b9aa9bb89cf0a93a1bef.hot-update.js","sources":["/Users/geekyants/Desktop/Hackathon-21/crypto-base/src/background/index.ts"],"sourcesContent":["import db from '../services/firebase';\nimport { onSnapshot, collection } from '@firebase/firestore';\n\nimport { apiEndPoints, fetchApi } from '../services/api';\nimport {\n  normalizePrice,\n  normalizeNotificationMessage,\n} from '../services/helpers';\n\nconst getMarketTicker = async (notificationCoins: string[]) => {\n  const requestURL = `${apiEndPoints.coinsQuotes}${notificationCoins.join(\n    ',',\n  )}`;\n\n  const response = await fetchApi(requestURL);\n  const json = await response.json();\n  const latestQuotes = Object.values(json.data).map((coin: any) => {\n    return {\n      name: coin.name,\n      price: `$${normalizePrice(coin.quote.USD.price)}`,\n    };\n  });\n\n  return latestQuotes;\n};\n\nconst getNotificationMessage = async () => {\n  const signedInUser: string | null = localStorage.getItem('userId');\n  let message: string = '';\n\n  if (signedInUser) {\n    onSnapshot(collection(db, 'users'), async (snapshot: any) => {\n      const db = snapshot.docs.map((doc: any) => doc.data());\n      const data = db.find((data: any) => data.userId === signedInUser);\n      if (data) {\n        const notificationCoins = data.notification.map(\n          (coin: any) => coin.slug,\n        );\n        if (notificationCoins.length > 0) {\n          const latestQuotes = await getMarketTicker(notificationCoins);\n          message = normalizeNotificationMessage(latestQuotes);\n          console.log(message);\n        }\n      }\n    });\n  }\n  return message;\n};\n\nconst notificationInBackground = async () => {\n  const newMessage = await getNotificationMessage();\n  console.log('Notification Message: ');\n  console.log(newMessage);\n\n  //Setting up alarm for notification.\n  chrome.alarms.create('notificationAlarm', {\n    periodInMinutes: 1,\n  });\n\n  //Firing notification upon that alarm.\n  chrome.alarms.onAlarm.addListener((alarm) => {\n    if (alarm.name === 'notificationAlarm') {\n      const message = '';\n      chrome.notifications.create('price change', {\n        type: 'basic',\n        iconUrl: 'img/icon-128.png',\n        title: 'Price Change Notification',\n        message: message,\n        priority: 2,\n      });\n    }\n  });\n};\n\nexport default notificationInBackground();\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAIA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AADA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}