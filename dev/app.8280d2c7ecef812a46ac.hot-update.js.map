{"version":3,"file":"app.8280d2c7ecef812a46ac.hot-update.js","sources":["/Users/geekyants/Desktop/Hackathon-21/crypto-base/src/pages/Search/index.tsx","/Users/geekyants/Desktop/Hackathon-21/crypto-base/src/services/api.ts","/Users/geekyants/Desktop/Hackathon-21/crypto-base/src/store/actions/actionSearch.ts"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Button } from '@material-ui/core';\nimport { Favorite } from '@material-ui/icons';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\n\nimport { getTrendingCoinsDetails } from '../../store/actions/actionSearch';\nimport { normalizePrice } from '../../services/helpers';\n\nconst useStyles = makeStyles((theme) => ({\n  searchContainer: {\n    flex: 1,\n    height: '100%',\n    backgroundColor: '#eeeeee',\n    overflowY: 'auto',\n    paddingBottom: 15,\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    paddingLeft: 15,\n    paddingRight: 15,\n    width: '100%',\n  },\n  button: {\n    marginTop: 'auto',\n  },\n  searchHeader: {\n    height: '10%',\n    display: 'flex',\n    alignItems: 'center',\n    width: '100%',\n  },\n  searchHeading: {\n    color: '#979797',\n    display: 'flex',\n    fontSize: 15,\n    fontWeight: 700,\n  },\n  trendingCoin: {\n    backgroundColor: 'white',\n    width: '47.5%',\n    height: 200,\n    marginBottom: 15,\n    padding: 10,\n    boxShadow: '0px 2px 9px 0px rgb(0 0 0 / 2%)',\n    borderRadius: '3px',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n  },\n  coin: {\n    width: 50,\n    height: 50,\n    border: '2px solid #979797',\n    borderRadius: '50%',\n  },\n  textBox: {\n    margin: '5px 0px',\n    textAlign: 'center',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  symbol: {\n    fontSize: 8,\n    fontWeight: 700,\n    color: '#669900',\n  },\n  priceChange: {\n    fontSize: 10,\n    marginLeft: 3,\n  },\n  change: {\n    marginRight: 2,\n    fontWeight: 500,\n  },\n  price: {\n    color: '#979797',\n    display: 'block',\n    marginTop: 5,\n    fontSize: 10,\n    fontWeight: 500,\n  },\n  name: {\n    fontSize: 14,\n    fontWeight: 600,\n    marginBottom: 5,\n  },\n}));\n\nconst StyledButton = withStyles((theme) => ({\n  root: {\n    color: '#fff',\n    backgroundColor: '#669900',\n    width: 100,\n    borderRadius: 15,\n    '&:hover': {\n      color: '#669900',\n      backgroundColor: '#fff',\n    },\n  },\n  label: {\n    fontSize: 12,\n    textTransform: 'capitalize',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  endIcon: {\n    marginLeft: 2,\n  },\n}))(Button);\n\nexport const Search: React.FC<{}> = (props) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const trendingCoins = useSelector((state: any) => state.search.trendingCoins);\n  const coinsDetails = useSelector((state: any) => state.search.coinsDetails);\n\n  useEffect(() => {\n    if (trendingCoins.length > 0 && !coinsDetails) {\n      dispatch(getTrendingCoinsDetails(trendingCoins));\n    }\n  }, []);\n\n  const renderPriceChange = (change: any) => {\n    const isPositive = change > 0;\n    const absoluteChange = Math.abs(change);\n    return (\n      <span\n        className={classes.priceChange}\n        style={{ color: isPositive ? '#006600' : '#cc3300' }}\n      >\n        {isPositive ? (\n          <span className={classes.change}>&uarr;{absoluteChange}%</span>\n        ) : (\n          <span className={classes.change}>&darr;{absoluteChange}%</span>\n        )}\n      </span>\n    );\n  };\n\n  return (\n    <div className={classes.searchContainer}>\n      {data.map((coin: any) => {\n        //const logo = coinsDetails[coin.id].logo;\n        return (\n          <div key={coin.id} className={classes.trendingCoin}>\n            <div className={classes.coin} />\n            <div className={classes.textBox}>\n              <span className={classes.name}>{coin.name}</span>\n              <span className={classes.symbol}>{coin.symbol}</span>\n              <span className={classes.price}>\n                ${normalizePrice(coin.quote.USD.price)} |\n                {renderPriceChange(\n                  coin.quote.USD.percent_change_24h.toFixed(2),\n                )}\n              </span>\n            </div>\n            <StyledButton\n              disableRipple\n              className={classes.button}\n              endIcon={<Favorite />}\n            >\n              Follow\n            </StyledButton>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Search;\n","const baseAPI = 'https://pro-api.coinmarketcap.com/';\nconst apiVersion = 'v1';\nconst apiKey = `&CMC_PRO_API_KEY=${process.env.REACT_APP_CMC_KEY}`;\n\nexport const apiEndPoints = {\n  popularCoins: '/cryptocurrency/listings/latest?limit=25',\n  trendingCoins:\n    '/cryptocurrency/listings/latest?sort=percent_change_24h&limit=25',\n  coinsInfo: '/cryptocurrency/info?slug=',\n};\n\nexport async function fetchApi(\n  endPoint: string,\n  payload?: {} | undefined,\n  method: string = 'get',\n  headers?: {},\n) {\n  let path = `${baseAPI}${apiVersion}${endPoint}${apiKey}`;\n  const headersObject: any = {\n    ...headers,\n  };\n  let request = {\n    body: JSON.stringify(payload),\n    headers: headersObject,\n    method: method.toLowerCase(),\n  };\n\n  try {\n    return fetch(path, request);\n  } catch (e) {\n    const stringError = e && e.toString && e.toString();\n    const type =\n      stringError === 'TypeError: Network request failed'\n        ? 'networkError'\n        : 'unknown';\n    const error = {\n      text: stringError,\n      type,\n    };\n    throw error;\n  }\n}\n","import { Dispatch } from 'redux';\n\nimport * as types from './actionTypes';\nimport { apiEndPoints, fetchApi } from '../../services/api';\n\nconst getTrendingCoinsSuccess = (coins: any[]) => {\n  return {\n    type: types.FETCH_TRENDING_COINS_SUCCESS,\n    coins,\n  };\n};\n\nconst getTrendingCoinsFailure = (error: string) => {\n  return {\n    type: types.FETCH_TRENDING_COINS_FAILURE,\n    error,\n  };\n};\n\nexport const getTrendingCoins = () => {\n  return async (dispatch: Dispatch<any>) => {\n    try {\n      const response = await fetchApi(apiEndPoints.trendingCoins);\n      if (response.ok) {\n        const json = await response.json();\n        dispatch(getTrendingCoinsSuccess(json.data));\n      } else {\n        dispatch(\n          getTrendingCoinsFailure('Unable to fetch trending cryptocurrency.'),\n        );\n      }\n    } catch (error) {\n      dispatch(\n        getTrendingCoinsFailure('Unable to fetch trending cryptocurrency.'),\n      );\n    }\n  };\n};\n\nconst getTrendingCoinsDetailsSuccess = (coinsInfo: {}) => {\n  return {\n    type: types.FETCH_TRENDING_COINS_DETAILS_SUCCESS,\n    coinsInfo,\n  };\n};\n\nconst getTrendingCoinsDetailsFailure = (error: string) => {\n  return {\n    type: types.FETCH_TRENDING_COINS_DETAILS_FAILURE,\n    error,\n  };\n};\n\nexport const getTrendingCoinsDetails = (coins: any[]) => {\n  return async (dispatch: Dispatch<any>) => {\n    const data = coins.map((coin: any) => coin.slug);\n    const requestURL = `${apiEndPoints.coinsInfo}${data.join(',')}`;\n    try {\n      const response = await fetchApi(requestURL);\n      if (response.ok) {\n        const json = await response.json();\n        dispatch(getTrendingCoinsDetailsSuccess(json.data));\n      } else {\n        dispatch(\n          getTrendingCoinsDetailsSuccess(\n            'Unable to fetch trending coins details.',\n          ),\n        );\n      }\n    } catch (error) {\n      dispatch(\n        getTrendingCoinsDetailsFailure(\n          'Unable to fetch trending coins details.',\n        ),\n      );\n    }\n  };\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAcA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAaA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AAHA;AA3EA;AAkFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AALA;AAUA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AADA;AAlBA;AAuqBA;AAzBA;AAAA;AAAA;AAAA;AAAA;AA4BA;AAEA;;;;;;;;;;;;AC/KA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAJA;AAOA;AAMA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;;;;;;;;;;;;ACvCA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAKA;AACA;AACA;;;;A","sourceRoot":""}