{"version":3,"file":"app.5418333f57ee9ac4fa93.hot-update.js","sources":["/Users/geekyants/Desktop/Hackathon-21/crypto-base/src/App.tsx","/Users/geekyants/Desktop/Hackathon-21/crypto-base/src/actions/actions.ts","/Users/geekyants/Desktop/Hackathon-21/crypto-base/src/services/api.ts"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Header from './components/Header';\nimport Layout from './pages/Layout';\nimport Navigation from './components/Navigation';\n\nimport { getMarketTicker } from './actions/actions';\n\nexport interface Props {}\n\nconst useStyles = makeStyles((theme) => ({\n  appContainer: {\n    width: 360,\n    height: 600,\n    backgroundColor: '#F8F8F8',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n  },\n}));\n\nexport const App: React.FC<Props> = () => {\n  const classes = useStyles();\n  const [value, setValue] = useState<string>('home');\n\n  const handleChange = (event: any, newValue: string) => {\n    setValue(newValue);\n  };\n\n  //TBD: The state below will be shifted to global state management.\n  useEffect(() => {\n    getMarketTicker();\n  }, []);\n\n  return (\n    <div className={classes.appContainer}>\n      <Header currentPage={value} />\n      <Layout currentPage={value} />\n      <Navigation currentPage={value} switchPage={handleChange} />\n    </div>\n  );\n};\n\nexport default App;\n","import { apiEndPoints, fetchApi } from '../services/api';\n\nexport const getMarketTicker = () => {\n  return async () => {\n    try {\n      const response = await fetchApi(apiEndPoints.marketTicker);\n      if (response.ok) {\n        const json = await response.json();\n        console.log(json);\n      } else {\n        console.log('Error in fetching!');\n      }\n    } catch (error) {\n      console.log('Error in fetching!');\n    }\n  };\n};\n","const baseAPI = 'https://api.wazirx.com/api';\nconst apiVersion = '/v2/';\n\nexport const apiEndPoints = {\n  marketStatus: 'market-status',\n  marketTicker: 'tickers',\n  marketDepth: 'depth',\n  marketTrade: 'trades',\n};\n\nexport async function fetchApi(\n  endPoint: string,\n  payload?: {} | undefined,\n  method: string = 'get',\n  headers?: {},\n) {\n  let path = `${baseAPI}${apiVersion}${endPoint}`;\n  const headersObject: any = {\n    ...headers,\n  };\n  let request = {\n    body: JSON.stringify(payload),\n    headers: headersObject,\n    method: method.toLowerCase(),\n  };\n\n  try {\n    return fetch(path, request);\n  } catch (e) {\n    const stringError = e && e.toString && e.toString();\n    const type =\n      stringError === 'TypeError: Network request failed'\n        ? 'networkError'\n        : 'unknown';\n    const error = {\n      text: stringError,\n      type,\n    };\n    throw error;\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AAEA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAMA;AAEA;;;;;;;;;;;;AC5CA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AChBA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAOA;AAMA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;;;;A","sourceRoot":""}